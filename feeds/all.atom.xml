<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pelican-blog</title><link href="dotu.github.io/" rel="alternate"></link><link href="dotu.github.io/feeds/all.atom.xml" rel="self"></link><id>dotu.github.io/</id><updated>2016-06-03T10:20:00+04:00</updated><entry><title>Rules of development</title><link href="dotu.github.io/rules-of-development.html" rel="alternate"></link><published>2016-06-03T10:20:00+04:00</published><author><name>diogen</name></author><id>tag:,2016-06-03:dotu.github.io/rules-of-development.html</id><summary type="html">&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;
&lt;h3&gt;Правило разработчика&lt;/h3&gt;
&lt;p&gt;Первое что нужно помнить при разработке ПО, то что это длительный процесс, он займет у вас много времени. Часть времени на написание самого кода, часть на переработку, часть на исправление ошибок, часть ан косметический рефакторинг, часть на тесты и т.п. Этапов будет много.&lt;/p&gt;
&lt;p&gt;Если сравнивать с видами бега , то можно сказать, что &lt;em&gt;это не спринт&lt;/em&gt;, где важно поскорее прибежать к финишу опередив соперников по скорости, &lt;em&gt;это марафон&lt;/em&gt; где важно распределить энергию так, чтобы суметь дойти до конца. Работа длится не один день и не одну неделю и выкладываясь по полной каждый день, вы рискуете выдохнуться раньше положенного времени.&lt;/p&gt;
&lt;p&gt;Разработка - &lt;em&gt;процесс итеративный&lt;/em&gt;, последовательный, в чем-то даже &lt;em&gt;эволюционный&lt;/em&gt;; шаг за шагом вы будете приближаться к поставленной цели и здесь нет смысла бежать напролом, забыв обо всем. Результат вашей работы должен быть виден, осязаем, а этого можно достичь только если процесс контролируется, т.е. управляем.&lt;/p&gt;
&lt;p&gt;Мне нравится одна иллюстрация, к-ая отлично демонстрирует данный подход. Её я подсмотрел в одной из презентаций в интернете.&lt;/p&gt;
&lt;p&gt;&lt;img src="/theme/images/dev/slide_5.jpg" width="800" alt="Разработка ПО - процесс итеративный"&gt;&lt;/p&gt;
&lt;p&gt;В конце каждой итерации вы будете иметь работающий результат. Он конечно будет отличаться от начальной задумки, но главное что она должна работать (на ней можно покататься).&lt;/p&gt;
&lt;h3&gt;Приоритеты \ Ценности \ Заповеди \ Мантра&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;работающий код ценнее неработающего. выполнение поставленной задачи важнее слепое\бездумное следованию правилам&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;понятный код ценнее непонятного. ожидаемый\предсказуемый результат\исход\код\результат_вызова_метода ценнее неожиданного\предсказуемого (принцип наименьшего удивления)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;один из критериев хорошего кода - локализация\поиск нужного участка кода&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Принцип завершенности. Как и влюбом деле важен результат, а не проделанная работа. Не нужно объяснять почему работа не сделана, лучше сделать всё возможное чтобы она была выполнена. Это относится к любому роду занятий.&lt;/p&gt;
&lt;p&gt;Работоспособность кода - первый и самый важный критерий оценки написанного кода. На этой стадии неважно качество кода. Если он выполняет работу это уже есть решение. Здесь нельзя сказать "код работает на 60-90%", программа либо работает либо нет. Помните об этом когда работаете.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Код должен читаться. Давайте &lt;strong&gt;осмысленные&lt;/strong&gt; имена всем переменным, классам, к-ые вы вводите. Помните об этом, это очень важно! Пока вы работаете с проектом, вы помните обо всех соглашениях и исключениях в вашем коде. Но сделав перерыв в несколько дней, к проекту будет все труднее вернуться, да и желание работать с ним будет уменьшаться до тех пор пока вы совсем его не оставите.&lt;/p&gt;
&lt;p&gt;Выбирая имена - старайтесь соблюдать правила английского языка. Даже если раньше вы не использовали какое-то слово. Даже если имя будет выбрано не совсем верно - это лучше чем ничего, тем более имя всегда можно подправить. Давать имена разным сущносятм\явлениям задача куда сложнее, чем может показаться. Это отмечают специалисты всех уровней.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Структура проекта должна быть построена т.о., чтобы на поиск нужного участка кода уходило меньше времени&lt;/p&gt;
&lt;p&gt;Если вам нужна детализация происходящего - не спихивайте всё в один метод\класс\слой*, создайте другой похожий, дайте ему имя. Старайтесь делить объекты по ответственностям, а не названиям. Видя какой класс за что отвечает - вы видите бизнес-процесс циликом и не привзяываетесь к именам объектов, ведь объекты - лишь реализация.&lt;/p&gt;
&lt;p&gt;Не бойтесь добавлять новые классы, лично я придерживаюсь правила, подсмотренного у Эванса в его книге про DDD. Взгляните на свою кисть, пальцы гнутся только там где это надо. Так же и с кодом, если необходимсость детализации есть - не старайтесь избежать введения нового класса, а наоборот смело создавайте.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;слой - суть совокупность классов, объединенных одной ответственностью&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Выделяя новые и новые ответственности, не боясь вводить новые классы вы увидите что код поддается стурктурированию и там где код был исключением из правил - проявился целый слой классов. Проект сам будет подсказывать вам в какую сторону двигаться, как упорядочивать классы. Со временем исключения допущенные в коде займут свои места в новых слоях, соглашения о к-ых приходилось помнить обретут свои имена. Т.о. вы будете сами создавать правила построения кода и выработаете свою единую стратегию\способ ведения проекта (workflow). Будете знать с чего начинать, что важно сейчас, а что потом.&lt;/p&gt;</summary></entry><entry><title>My First Review</title><link href="dotu.github.io/my-first-review.html" rel="alternate"></link><published>2010-12-03T10:20:00+03:00</published><author><name>diogen</name></author><id>tag:,2010-12-03:dotu.github.io/my-first-review.html</id><summary type="html">&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;</summary></entry><entry><title>My super title</title><link href="dotu.github.io/my-super-post.html" rel="alternate"></link><published>2010-12-05T19:30:00+03:00</published><author><name>Alexis Metaireau</name></author><id>tag:,2010-12-03:dotu.github.io/my-super-post.html</id><summary type="html">&lt;p&gt;This is the content of my super blog post.&lt;/p&gt;</summary><category term="pelican"></category><category term="publishing"></category></entry></feed>